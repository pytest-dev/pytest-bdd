---
name: Main testing workflow

on:  # yamllint disable-line rule:truthy
  push:
  pull_request:
  workflow_dispatch:

jobs:
  test:

    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
          - "pypy3.9"
          - "pypy3.10"
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        exclude:
          - python-version: "3.10"
            os: windows-latest
          - python-version: "3.11"
            os: windows-latest
          - python-version: "3.12"
            os: windows-latest
          - python-version: "3.10"
            os: macos-latest
          - python-version: "3.11"
            os: macos-latest
          - python-version: "3.12"
            os: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "*"
      - name: Install pandoc
        uses: r-lib/actions/setup-pandoc@v2
      - name: Install PyPi dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U setuptools
          pip install "tox>=4.0" "tox-gh-actions>=3.2" codecov
      - name: Install npm dependencies
        run: |
          npm install "@cucumber/gherkin"
          npm install "@cucumber/html-formatter"
          npm install cucumber-html-reporter
          npm list
      - name: Test with tox
        run: |
          tox
      - name: Gather codecov
        if: (matrix.python-version == '3.9' || matrix.python-version == '3.13')
        run: |
          codecov
      - name: Build checking
        if: "matrix.python-version == '3.13'"
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          python -m pip install --upgrade build twine
          python -m build
          twine check dist/*
