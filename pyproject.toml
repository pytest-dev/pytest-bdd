[tool.poetry]
name = "pytest-bdd"
version = "6.1.1"
description = "BDD for pytest"
authors = ["Oleg Pidsadnyi <oleg.pidsadnyi@gmail.com>", "Anatoly Bubenkov <bubenkoff@gmail.com>"]
maintainers = ["Alessio Bogon <778703+youtux@users.noreply.github.com>"]
license = "MIT"
readme = "README.rst"
homepage = "https://pytest-bdd.readthedocs.io/"
documentation = "https://pytest-bdd.readthedocs.io/"
repository = "https://github.com/pytest-dev/pytest-bdd"
classifiers = [
    "Development Status :: 6 - Mature",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: MacOS :: MacOS X",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Libraries",
    "Topic :: Utilities",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[tool.poetry.plugins."pytest11"]
"pytest-bdd" = "pytest_bdd.plugin"

[tool.poetry.scripts]
"pytest-bdd" = "pytest_bdd.scripts:main"

[tool.poetry.dependencies]
python = ">=3.8"
Mako = "*"
parse = "*"
parse-type = "*"
pytest = ">=6.2.0"
typing-extensions = "*"

[tool.poetry.group.dev.dependencies]
tox = "^4.1.3"
mypy = "^1.4.1"
types-setuptools = "^65.5.0.2"
pytest-xdist = "^3.0.2"
coverage = {extras = ["toml"], version = "^6.5.0"}
Pygments = "^2.13.0"  # for code-block highlighting
pytest-asyncio = "^0.21.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ["py38", "py39", "py310", "py311"]

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3

[tool.coverage.report]
exclude_lines = [
    "if TYPE_CHECKING:",
    "if typing\\.TYPE_CHECKING:",
]
[tool.coverage.html]
show_contexts = true

[tool.coverage.run]
branch = true
# `parallel` will cause each tox env to put data into a different file, so that we can combine them later
parallel = true
source = ["pytest_bdd", "tests"]
dynamic_context = "test_function"

[tool.coverage.paths]
# treat these directories as the same when combining
# the first item is going to be the canonical dir
source = [
    "src/pytest_bdd",
    ".tox/*/lib/python*/site-packages/pytest_bdd",
]


[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
files = "src/pytest_bdd/**/*.py"

[[tool.mypy.overrides]]
module = ["parse", "parse_type"]
ignore_missing_imports = true
